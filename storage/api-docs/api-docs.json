{
    "openapi": "3.0.0",
    "info": {
        "title": "Wheels API",
        "description": "API for wheels app",
        "contact": {
            "email": "adrian.sullca@cirvianum.cat"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost",
            "description": "Local development server"
        }
    ],
    "paths": {
        "/api/admin/users": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Retrieve all users except the authenticated admin",
                "description": "Fetches a list of all users in the system, excluding the authenticated admin.",
                "operationId": "9b9c51a99eee532fd70801e93b3c836d",
                "responses": {
                    "200": {
                        "description": "List of users retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "users": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "john.doe@example.com"
                                                    },
                                                    "phone_number": {
                                                        "type": "string",
                                                        "example": "123456789"
                                                    },
                                                    "enabled": {
                                                        "type": "boolean",
                                                        "example": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Authentication required. Please log in."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/{id}": {
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Delete a user by ID",
                "description": "Allows an admin to delete a user from the system. The admin cannot delete their own account.",
                "operationId": "62f8148c47a27963cc2ca8a293e8b23e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User successfully deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You cannot delete your own user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Authentication required. Please log in."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Admin"
                ],
                "summary": "Update a user's information",
                "description": "Allows an admin to update a user's details such as name, email, phone number, and password.",
                "operationId": "54595b6c550b3713374e875701d497a3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "123456789"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    },
                                    "enabled": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User successfully updated"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                },
                                                "phone_number": {
                                                    "type": "string",
                                                    "example": "123321111"
                                                },
                                                "new_password": {
                                                    "type": "string",
                                                    "example": "password"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Authentication required. Please log in."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/create": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Create a new user",
                "description": "Allows an admin to create a new user in the system.",
                "operationId": "27c456154f3c7cb0f5b44020982b128e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Jane Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "jane.doe@example.com"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "987654321"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User successfully created"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Jane Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "jane.doe@example.com"
                                                },
                                                "phone_number": {
                                                    "type": "string",
                                                    "example": "987654321"
                                                },
                                                "profile_picture_path": {
                                                    "type": "string",
                                                    "example": "https://res.cloudinary.com/dxvjedi2n/image/upload/v1736545077/announcements_photos/akfh7cmj35d5ynlmtolk.png"
                                                },
                                                "enabled": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "admin": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "email_verified_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-01-12T23:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Authentication required. Please log in."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/reviews": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Retrieve all reviews",
                "description": "Fetches all reviews from the system, including details about the user who rated and the user who was rated.",
                "operationId": "0a8cac01a58f121ad0844558e039faf1",
                "responses": {
                    "200": {
                        "description": "List of reviews retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "reviews": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "rating": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "comment": {
                                                        "type": "string",
                                                        "example": "Great service!"
                                                    },
                                                    "valuator": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "john.doe@example.com"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "ratedUser": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Jane Smith"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "jane.smith@example.com"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Authentication required. Please log in."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/announcements": {
            "get": {
                "tags": [
                    "Announcements"
                ],
                "summary": "Retrieve all active announcements except those created by the authenticated user",
                "operationId": "ce475728e053e113e721a129a915c22b",
                "responses": {
                    "200": {
                        "description": "List of announcements retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/announcements/create": {
            "post": {
                "tags": [
                    "Announcements"
                ],
                "summary": "Create a new announcement",
                "description": "Creates a new announcement with details such as title, description, model, brand, year, and associated photos.",
                "operationId": "d62a861bc49dbb3944847a10705e27a8",
                "requestBody": {
                    "description": "Announcement details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Brand new sedan"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Low mileage, well-maintained car."
                                    },
                                    "model": {
                                        "type": "string",
                                        "example": "Corolla"
                                    },
                                    "brand": {
                                        "type": "string",
                                        "example": "Toyota"
                                    },
                                    "kilometers": {
                                        "type": "number",
                                        "example": 15000
                                    },
                                    "year": {
                                        "type": "integer",
                                        "example": 2022
                                    },
                                    "price": {
                                        "type": "number",
                                        "example": 25000
                                    },
                                    "state": {
                                        "type": "string",
                                        "example": "active"
                                    },
                                    "photos": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "vehicleType": {
                                        "type": "string",
                                        "example": "sedan"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Announcement created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Announcement created successfully"
                                        },
                                        "announcement": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Brand new sedan"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Low mileage, well-maintained car."
                                                },
                                                "model": {
                                                    "type": "string",
                                                    "example": "Corolla"
                                                },
                                                "brand": {
                                                    "type": "string",
                                                    "example": "Toyota"
                                                },
                                                "kilometers": {
                                                    "type": "number",
                                                    "example": 15000
                                                },
                                                "year": {
                                                    "type": "integer",
                                                    "example": 2022
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "example": 25000
                                                },
                                                "state": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "vehicleType": {
                                                    "type": "string",
                                                    "example": "sedan"
                                                },
                                                "photoUrls": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "https://res.cloudinary.com/example/image/upload/photo1.jpg"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Authentication required. Please log in."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/announcements/{id}": {
            "get": {
                "tags": [
                    "Announcements"
                ],
                "summary": "Get a specific announcement by ID",
                "description": "Fetches the details of an announcement, including its associated photos and user information. The announcement must be active unless the requester is the owner.",
                "operationId": "83cc262e59173e4fd6d88d5b1df22528",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the announcement to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Announcement details fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "announcement": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Brand new sedan"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Low mileage, well-maintained car."
                                                },
                                                "model": {
                                                    "type": "string",
                                                    "example": "Corolla"
                                                },
                                                "brand": {
                                                    "type": "string",
                                                    "example": "Toyota"
                                                },
                                                "kilometers": {
                                                    "type": "integer",
                                                    "example": 15000
                                                },
                                                "year": {
                                                    "type": "integer",
                                                    "example": 2022
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "example": 25000
                                                },
                                                "state": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "photoUrls": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "https://example.com/photo.jpg"
                                                    }
                                                },
                                                "isFavorite": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Announcement not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Announcement not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Authentication required. Please log in."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Announcements"
                ],
                "summary": "Delete an existing announcement",
                "description": "Allows a user to delete their own announcement, including its associated photos.",
                "operationId": "e48bd0c53a7271e39bafbfdd7d58cd64",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the announcement to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Announcement deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Announcement deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to delete this announcement"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Announcement not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Announcement not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Authentication required. Please log in."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Announcements"
                ],
                "summary": "Update an existing announcement",
                "description": "Allows a user to update their announcement's details, manage photos (add or remove), and modify its state.",
                "operationId": "30fb59bb42b565f49da77a355d6209dc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the announcement to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated title"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description"
                                    },
                                    "vehicleType": {
                                        "type": "string",
                                        "example": "sedan"
                                    },
                                    "brand": {
                                        "type": "string",
                                        "example": "Toyota"
                                    },
                                    "year": {
                                        "type": "integer",
                                        "example": 2022
                                    },
                                    "model": {
                                        "type": "string",
                                        "example": "Corolla"
                                    },
                                    "kilometers": {
                                        "type": "integer",
                                        "example": 15000
                                    },
                                    "price": {
                                        "type": "number",
                                        "example": 25000
                                    },
                                    "state": {
                                        "type": "string",
                                        "example": "active"
                                    },
                                    "oldPhotos": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "https://example.com/photo1.jpg"
                                        }
                                    },
                                    "newPhotos": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Announcement updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Announcement updated successfully"
                                        },
                                        "announcement": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Updated title"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Updated description"
                                                },
                                                "state": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "photos": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "https://example.com/photo.jpg"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to update this announcement"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Announcement not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Announcement not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Authentication required. Please log in."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "8a56853624e025573120a09a4c75d468",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "Password123!"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "Password123!"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "123456789"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Registration successful. Please confirm your email."
                    },
                    "422": {
                        "description": "Validation failed"
                    },
                    "500": {
                        "description": "An error occurred during registration"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log in a user",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "Password123!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "token_string"
                                        },
                                        "user": {
                                            "type": "object",
                                            "example": {
                                                "id": 1,
                                                "name": "John Doe",
                                                "email": "john.doe@example.com"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "403": {
                        "description": "Email not verified"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log out a user",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "Logged out successfully"
                    },
                    "401": {
                        "description": "No token provided or invalid token"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/favorites": {
            "get": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Get all favorite announcements of the authenticated user",
                "operationId": "5737e53d37306c1515de198824b8cccf",
                "responses": {
                    "200": {
                        "description": "List of favorites",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "favorites": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "example": {
                                                    "id": 1,
                                                    "announcement_id": 42,
                                                    "created_at": "2025-01-01T12:00:00Z"
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/favorites/{announcement_id}/toggle": {
            "post": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Toggle favorite status for an announcement",
                "operationId": "53985cb36ed9fa098ab54f65d09c6e70",
                "parameters": [
                    {
                        "name": "announcement_id",
                        "in": "path",
                        "description": "ID of the announcement",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 42
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Favorite added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Favorite added"
                                        },
                                        "favorite": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Favorite removed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Favorite removed"
                                        },
                                        "favorite": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "404": {
                        "description": "Announcement not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/profile/{id}/stats": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Get profile statistics for a user",
                "description": "Returns the statistics of a user's profile, including announcement count, review count, and total favorites.",
                "operationId": "9a85fa6f69b0f5d47dae871f53629ea4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user whose profile statistics are being fetched",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile statistics fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "type": "object",
                                            "example": {
                                                "id": 1,
                                                "name": "John Doe",
                                                "email": "john@example.com"
                                            }
                                        },
                                        "stats": {
                                            "properties": {
                                                "announcements_count": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "reviews_count": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total_favorites": {
                                                    "type": "integer",
                                                    "example": 15
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required"
                    }
                }
            }
        },
        "/api/profile/{id}/announcements": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Get all announcements by a user",
                "description": "Fetches a list of announcements made by a user. If the authenticated user is not the profile owner, only active announcements are returned.",
                "operationId": "4e2f2f191f0193d1b05a10b54f812a48",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user whose announcements are being fetched",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User's announcements fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "userAuthenticated": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "announcements": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Car for Sale"
                                                    },
                                                    "photoUrls": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "example": "https://example.com/photo1.jpg"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required"
                    }
                }
            }
        },
        "/api/profile/{id}/reviews": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Get reviews for a user",
                "description": "Fetches all reviews left for a user. Includes the details of the users who left the reviews.",
                "operationId": "10e362897ee3f580934908f5e86e62a2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user whose reviews are being fetched",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User reviews fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "reviews": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "example": {
                                                    "id": 1,
                                                    "rating": 5,
                                                    "comment": "Great user!",
                                                    "valuator": {
                                                        "id": 2,
                                                        "name": "Jane Doe"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required"
                    }
                }
            }
        },
        "/api/reviews/{id}/create": {
            "post": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Create a review for a user",
                "description": "Allows an authenticated user to create a review for another user. The reviewer cannot comment on themselves.",
                "operationId": "e51e27f9608aa09eed93f5c9c826729a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user being reviewed",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "rating": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "comment": {
                                        "type": "string",
                                        "example": "Great experience!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Review created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Review created successfully"
                                        },
                                        "review": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "rating": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "comment": {
                                                    "type": "string",
                                                    "example": "Great experience!"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You cannot comment to yourself"
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "properties": {
                                                "comment": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The comment field is required."
                                                    }
                                                },
                                                "rating": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The rating field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required"
                    }
                }
            }
        },
        "/api/reviews/{id}": {
            "delete": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Delete an existing review",
                "description": "Allows an authenticated user to delete a review. The user can delete a review they either created or are the subject of.",
                "operationId": "02353f4fffaab1a19702203f6bb2f2b6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the review to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Review deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Review deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You cannot delete this review",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You cannot delete this review"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "404": {
                        "description": "Review not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Update an existing review",
                "description": "Allows an authenticated user to update their own review. The reviewer cannot update a review they did not create.",
                "operationId": "c8890c16a39ff049364920ebbf507871",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the review to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "rating": {
                                        "type": "integer",
                                        "example": 4
                                    },
                                    "comment": {
                                        "type": "string",
                                        "example": "Updated comment on the review"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Review updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Review updated successfully"
                                        },
                                        "review": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "rating": {
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "comment": {
                                                    "type": "string",
                                                    "example": "Updated comment on the review"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You cannot update a review that is not yours"
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "properties": {
                                                "comment": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The comment field must be a string."
                                                    }
                                                },
                                                "rating": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The rating field must be a number."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required"
                    }
                }
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Retrieve user details by token",
                "description": "Fetches the authenticated user's details using the provided bearer token.",
                "operationId": "f26204b22147fb552318c9b85a6d9a02",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "your_access_token_here"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Authentication required. Please log in."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/updateGeneralInformation": {
            "patch": {
                "tags": [
                    "User"
                ],
                "summary": "Update general information of the authenticated user",
                "description": "Allows a user to update their general profile information, including name, email, phone number, and profile picture.",
                "operationId": "d587ffa1271d15ad736f1cac68fe888d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "123456789"
                                    },
                                    "new_profile_picture": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                },
                                                "phone_number": {
                                                    "type": "string",
                                                    "example": "123456789"
                                                },
                                                "profile_picture_path": {
                                                    "type": "string",
                                                    "example": "https://res.cloudinary.com/example/image/upload/v123456789/profile.jpg"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred while updating the profile",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while updating the profile."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Error details here"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Authentication required. Please log in."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/updateSecurity": {
            "patch": {
                "tags": [
                    "User"
                ],
                "summary": "Update user's security information",
                "description": "Allows a user to update their password by providing the current password and a new password.",
                "operationId": "d89843b380791ba2c473261d72b08500",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "example": "currentPassword123"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "example": "newPassword456"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "newPassword456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "properties": {
                                                "current_password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The current password is incorrect"
                                                    }
                                                },
                                                "new_password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The new password must be different from the current password"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred while updating the password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while updating the password."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Error details here"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Authentication required. Please log in."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "tags": [
        {
            "name": "Admin",
            "description": "Admin"
        },
        {
            "name": "Announcements",
            "description": "Announcements"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Favorites",
            "description": "Favorites"
        },
        {
            "name": "Profile",
            "description": "Profile"
        },
        {
            "name": "Reviews",
            "description": "Reviews"
        },
        {
            "name": "User",
            "description": "User"
        }
    ]
}